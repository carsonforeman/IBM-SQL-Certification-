select * from employees;
select * from  departments;

--Returns an error: 
select * from employees
	where salary > avg(salary);
	
--Query A2: Enter a working query using a sub-select to retrieve all employees whose salary is greater than the average salary

select emp_id, f_name, l_name, salary from employees 
	where salary > (select avg(salary) from employees);
	
--Query A3: Enter a failing query (i.e.  that gives an error) that retrieves all employees records and average salary in every row

select *, avg (salary) as avg_salary from employees;

--Query A4: Enter a Column Expression that retrieves all employees records and average salary in every row

select *, (select avg (salary ) from employees)  as avg_salary from employees;

--Query A5: Enter a Table Expression that retrieves only the columns  with non-sensitive employee data

select * from ( select EMP_ID, F_NAME, L_NAME, DEP_ID from employees) AS EMP4ALL ;

--Query B1: Retrieve only the EMPLOYEES records that correspond to departments in the DEPARTMENTS table

select * from employees 
	where dep_id in (select dept_id_dep from departments);
	
--Query B2: Retrieve only the list of employees from location L0002

select f_name, l_name from employees
	where dep_id in (select dept_id_dep from departments where loc_id = 'L0002');
	
--Query B3: Retrieve the department ID and name for employees who earn more than $70,000

select dept_id_dep, dep_name from departments where dept_id_dep in (select dep_id from employees where salary > 70000);

--Query B4: Specify 2 tables in the FROM clause

select * from employees, departments; 

--Accessing Multiple Tables with Implicit Joins

--Query B5: Retrieve only the EMPLOYEES records that correspond to departments in the DEPARTMENTS table

select * from employees as em, departments as de where em.dep_id = de.dept_id_dep;

--Query B6: Use shorter aliases for table names

select * from employees E, departments D where E.DEP_ID = D.DEPT_ID_DEP;

--Query B7: Retrieve only the Employee ID and Department name in the above query


select emp_id, dep_name from employees E, departments D where E.dep_id = d.dept_id_dep;


--Query B8: In the above query specify the fully qualified column names with aliases in the SELECT clause

select E.EMP_ID, D.DEP_NAME from employees E, departments D where E.DEP_ID = D.DEPT_ID_DEP
















